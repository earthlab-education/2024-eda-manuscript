Tool_1,Tool_2,Tool_3,Tool_4,Other text,Comfort,Approach,Class of,Fall of
,"Scientific Programming (e.g. R, Python)",,,,I am very uncomfortable using this tool,"I really am not sure how to do this task with Python. 

I imagine the first step would be to extract and organize the data in the text file. ",2020,2019
Excel,,,,,I am comfortable using this tool,I would enter all the data into excel and then use the tool to create a scatter plot reflecting all the data entered,2020,2019
Excel,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"The easiest thing for me to do would be to combine the data into one file in excel, bring it into R to manipulate using plyr/dplyr, and then to make the graph in R with ggplot. I could also do everything in excel but I think the manipulation would take me longer and the graph wouldn't be as visually appealing. I could also do everything in R but I'm less comfortable with the steps to create a new data table and get all of the information in the same and correct place, and so I think it would take me longer to accomplish than in excel.",2020,2019
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"import files into R
average the data in each file
create a matrix of averages over year
plot in R",2020,2019
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"I would first create a single dataframe with all of the data.  Then I would write a formula that averaged each months' temperatures.  Lastly, I would plot it.",2020,2019
,"Scientific Programming (e.g. R, Python)",,,,I am uncomfortable using this tool,"Uh oh... it's been a while since I had to start anything from scratch and I wasn't good at it then, but roughly....
* import a couple things (numpy, matplotlib, maybe others?)
* count the lines and then pre-populate an array with zeroes
* read in data files, looping through to open each file
* read each line, split to make it into a list of (presumably) Y, M, D and daily mean T values & populate array
* and then, I think, loop through all of the values for each month (e.g. all the January values for all the years, then all the Feb, etc) and get the np.mean for each month
* And finally plt.plot the 12 values
Most of the Python stuff I have done is work with other people's way more complicated code to tweak it to get some plots to come out and don't really understand it well.  I'm going to be happy to start with the basics again and build up!
",2020,2019
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"1. Ensure that folder containing .txt files ONLY contains text files (for peace of mind) and that all .txt files are formatted the same
2. Use jupyter notebook and os module to make a list of files
3. loop thru files using python and load into pandas dataframe
4. Find out what the equivalent of MAXIF is in pandas/python and use that
5. Mess around with the code to ensure it works
6. Draw graph using matplotlib",2020,2019
Excel,,,,,I am very comfortable using this tool,"In Excel:
1) Import each text file into the spreadsheet.
2) Use the chart/graph functionality to create a plot.
3) Configure the layout of the plot.",2020,2019
,"Scientific Programming (e.g. R, Python)",,,,I am very comfortable using this tool,"in R
set working directory to where the files are located
look for files with the naming convention
loop through the files importing each set of data and binding it to the last dataset
order data by year, month and day
perform some quality checks for missing days and gaps, out of range values
derive temperature value in degrees C 
group cleaned data by year and month to calculate annual monthly mean
plot mean data",2020,2019
Excel,,,,,I am comfortable using this tool,"Import the text files into excel spreadsheets, input a formula to calculate an average monthly temperature for each year, plot that data for each year, migrate the values for average monthly temperature for each year into a new excel sheet, plot the 32 years worth of average monthly temperatures in excel to find temperature change over time.",2020,2019
Excel,,,Other (please list),Matlab,I am very comfortable using this tool,"Use Import Tool feature in Matlab to get the data into workspace. 
Use IF functions to determine if temperature is Jan, Feb, etc. 
SUMIF (in Excel, not sure about Matlab) if TRUE and divide by days in month. 
Now you have array of temps and months to plot. ",2020,2019
Excel,,,,,I am comfortable using this tool,I would order each year of data into 12 cells in the same row. Do the same for each year creating 32 rows. Create a formula to calculate the average of each column.,2020,2019
,"Scientific Programming (e.g. R, Python)",Bash/Shell,,,I am uncomfortable using this tool,"R would be a useful tool, as it handles large data sets. All that you would need to do is create a simple function that will calculate monthly average temperatures. Then you would need to create another function that will take these averages from different files, on a repeating basis per folder. ",2020,2019
Excel,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"I will convert text file to dataframes and plot data with matplot lib 
or I will save dataframe csv file and plot quickly with excel graphing tools.",2020,2019
Excel,,,Other (please list),Not sure,I am very comfortable using this tool,Unsure,2020,2019
Excel,,,,,I am very comfortable using this tool,"Organize the data by year in Excel, use the in program function for averaging.  Then plot those averages in a scatter plot. Edit the plot so that the data axis are clearly labeled.",2020,2019
Excel,,,,,I am uncomfortable using this tool,Don‚Äôt exactly remember how.,2020,2019
Excel,,,,,I am comfortable using this tool,"Add cells and divide over each month, and plot these values in the correct order.",2020,2019
Excel,,,,,I am uncomfortable using this tool,i just know you can enter data into an Excel spreadsheet and make a plot from that. I haven't done so in a couple years though,2020,2019
Excel,,,,,I am comfortable using this tool,"I would import the files into excel and create new vectors for each month. Then, average these vectors and convert them to Celsius. Next plot these values against time (month).",2020,2019
Excel,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"It's been a little while, so I would definitely need to use some Google along the way, but, essentially:
1) read in .csv files to R
2)Make sure every text file uses the same headers for each month
3) calculate the mean for each month from each dataset
4) plot the mean temperature per month for the year",2020,2019
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"1) Load all text files into a data frame using R -- each column will be a year and rows will represent a day's average temperature. So, the data frame will have 365 rows and 32 columns. 

2) Convert degrees Fahrenheit to degrees Celcius. 

3) Create a date column (using as.Date) and calculate monthly temperature averages. (Ex: average of days 1-31 = January average temp). 

4) you can now plot monthly temperature averages over time. The example graph looks like it's for only one year or a 32-year average.   

",2020,2019
Excel,,Bash/Shell,,,I am very comfortable using this tool,"cell math

or script it for a bash shell",2020,2019
Excel,,,,,I am very comfortable using this tool,"I know this is painstaking...

1)tabulate data by transposing so each row represents a years worth of data (365 or 366 columns
2) For bookkeeping I would add a blank column in between each month
3) Insert a couple blank rows at the top, and label the topmost cell in each blank column that follows a month as that month (Jan, Feb, etc...)
4) Below the Month label, make a cell that does an average function of all the data from the 31 rows (years) for each month 
5) Make a plot with the top two rows (Month on the x axis, average value on the y)
6) Format plot to have appropriate symbology and line segments connecting data point
7) Troubleshoot deliverable as required ",2021,2020
Excel,"Scientific Programming (e.g. R, Python)",,,,I am very comfortable using this tool,"- loop through the 32 files in the directory, appending each year of data to a single pandas dataframe (assuming each temp value has a full date associated with it) 
- convert values to Celsius 
- ensure data type of date column is datetime to be able to identify or parse out the month (maybe make new column of just the month? would have to play with the date to know what works)
- df.groupby('month').agg({'temp': 'avg'})
- plot avg temp vs month using matplotlib",2021,2020
Excel,,,Other (please list),Matlab,I am comfortable using this tool,"- QA/QC [done in excel]: open text files to see how data are organized, if their formats match (same heading, delineation, etc), figure out how null values are notated and if they're notated the same throughout, format any gaps in data so that they will be friendly to analysis, make sure months are displayed as numbers, etc

- import text text or excel files into matlab as arrays

- Figure out how to pull the month out of however the date is formatted in the text file, and add that as a row/column in all the arrays

-  Combine all the arrays into one, big array

- Write some function to pull out all the temperature values from the big array to make little arrays for each month

- calculate the mean temperature for each month array, and probably throw some standard deviations in there

- combine all these values (date, mean temp, std dev) into a new array

- use matlab to plot the data",2021,2020
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"1) Search directory to build list of the 32 text files
2) With the list above as input to a for loop, read in the data from each year and populate a data frame where each row represents a specific date; perhaps iterate over each row of data being read in and append to the data frame?
3) In the same loop as above calculate average monthly values and add to a new data frame that would have one column for month and second column for value; different ways to do this depending on the source data such as selecting all values for a month and calculating average value or explicitly selecting rows for the ordinal day
4) Add a new column for temp in Celsius to data frame and calculate from F temperature values
5) Use MatplotLib to plot up month against C degrees temperature and export as image; perhaps use input filename to identify year?

Hopefully that's not too much detail.
",2021,2020
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"I would probably start in excel and make one giant spreadsheet with three columns: date, temp, and month. If month wasn't already specified I would use text to columns to make it or else some other process. It would depend on the measurement interval, I guess.

Then I would import the giant spreadsheet into r. I would then create a dataframe and add a vector of months (months <- c(Jan, Feb, Mar...,Dec)). Then I would use subset function to make a new vector for each month of all the temps for that month. Maybe,  jantemp <- subset(data, month = jan). I would do this in r and not excel because you would have to do annoying if statements or a lot of copy/paste in excel. 

Next I would make a vector of all the means of the monthly temps meantemps <- c(mean(jantemp),mean(febtemp),...mean(dectemp).

Then finally plot(months ~ meantemps)
 ",2021,2020
Excel,,,,,I am uncomfortable using this tool,I would not be able to do this task.,2021,2020
,"Scientific Programming (e.g. R, Python)",,,,I am very comfortable using this tool,"I would begin by determining the format of the text file.  Next, I would write a for loop to iterate over each file in my data directory (which stores each of the data files) and read the daily average temperatures from each file into a pandas data frame that can be indexed by month and year.  Subsequently, I would iterate over each month and year in chronological data to select and average the monthly temperature data in this data frame, storing these average values in an array. Next, the Fahrenheit averages could be converted to Celsius averages with a call to a function that takes a numpy array as input and outputs the unit converted array.  Finally, using a plotting library such as matplotlib, I would plot these monthly data averages.",2021,2020
,"Scientific Programming (e.g. R, Python)",,,,I am very comfortable using this tool,"# PSEUDO CODE

# Import statements
import glob
import matplotlib.pyplot as plt
import os
import pandas as pd

# Set proper current working directory
os.chdir(r'C:\Users\[remainder of path to current working directory]')

# Import 32 text files to one consolidated DataFrame
all_data_df = pd.concat([pd.read_csv(file, sep=',') for file in glob.glob(""*.csv"")],
                        ignore_index=True)

# Create a new variable containing the daily temps in degrees Celsius
all_data_df['tempC'] = (all_data_df['tempF'] - 32) * (5/9)

# Set the date/time column as the DataFrame's index
all_data_df.set_index('date_time', inplace=True)

# Resample the data from daily temp observations to monthly avg temp (Celsius) observations
monthly_data_df = all_data_df['tempC'].resample('M').mean()

# Plot temperature over time
ax = monthly_data_df.plot()
ax.set_ylabel('Temperature (Celsius)')
plt.show()",2021,2020
Excel,,,,,I am uncomfortable using this tool,"I would convert the text files to comma delimited files, combine them, and try to write a formula that would average the temperature by month for each year and then  convert degrees F to degrees C. Then I would create a plot with the averaged result for each month on the x-axis with degrees C on the y-axis. ",2021,2020
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"First, I would hope the .txt files follow a consistent naming convention (and if not I'd probably manually rename them something along the lines of yyyy_temp).

I use RStudio, and would start a new script, load necessary packages, and navigate to the appropriate working directory. The command read.delim(""filename"") is used to read a text file. To make referring to a particular file easier, I'd name the dataframe: yytemps <- read.delim(""yyyy_temp""). 
I can now ""see"" the data using head(yytemps), which gives column names and the first few rows of data.

Because we want the plot to have temperatures in Celsius, I need to convert each value from Fahrenheit. I could probably do this by creating a vector with:

celsius <- (yytemps$fahrenheit - 32)* (5/9)

and then appending the vector as a column to the yytemps dataframe:

yytemps$celsius <- celsius

The function mean() is used to calculate averages. I need to specify arguments that tell it which data set to use and which column from that dataset. In order to get monthly averages rather than an annual mean, I also need to specify a range of rows (for each month). That code might look something like:
yyjan <- mean(yytemps[1:31, 3])
where 1:31 specifies the rows containing data for January, and 3 specifies the column I added containing temperature data in celsius.

There might be a way to automate this so I don't have to manually change the row numbers for each month, so I'd probably look into writing a conditional loop or maybe even a variation on the mean() function, but I don't know how to do that off the top of my head (I'm sure there's something on stackoverflow).

Otherwise, I'd just ""brute force"" it as above to get an average for each month, use ggplot2 to generate a plot of monthly avg temp (C) on the y-axis vs date (month) on the x-axis, and then run the script for each individual file (resulting in 32 plots and a whole mess of variables).

It's not the most elegant solution, but it's one I know would work.",2021,2020
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"For each file:
Read temperatures to list of floats
Calculate average using sum/len
Convert to C
Store in dict keyed to year

Read matplotlib docs for one millionth time 
Plot results in using matplotlib",2021,2020
Excel,,,,,I am comfortable using this tool,"Import text files into Excel, separate into columns/rows as needed. Create functions to average temp data by month and plot output. Repeat for each year (yuck) hence the need to learn other programs.",2021,2020
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"I would read the 32 files in R
Merge them together using something like Rbind
Summarize temperature by taking the mean for each month using dplyr group_by and summarise
And then plot the values",2021,2020
Excel,,,,,I am comfortable using this tool,"import the files into excel
get averages of the days in each month of each year
get averages of the months from all the years
plot these averages",2021,2020
Excel,,,,,I am comfortable using this tool,"1.import data into excel 
2. merge the 32 files
3. take the average
",2021,2020
Excel,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"1. Convert .txt file to .csv (likely consolidating into fewer files depending on characteristics of the data)
2. import to R
3. use R pkgs like dplyr and tidyr organize and summarize into monthly metrics
4. use R ggplot2 to generate figures",2021,2020
Excel,"Scientific Programming (e.g. R, Python)",,,,I am very comfortable using this tool,"1) First, make sure all the files are in the same folder - then import the files into R using a custom function which would row bind the files together under the same column names 

2) To sure time-series analysis can be done, I would asses the class of the date column and convert to a readable format for seasonality analysis using either base R or Lubridate

3) Now the table is organized in to a time series flat file, I would create a new table using as_tsibble() to make the table functional as a time series object. Tsibble will also identify if there are time gaps in the data set and can identify and interpolate the gaps in the data set. 

4) Create a new column using month() to identify the month opf the data column. Then agtgrigate using the following: 

My_Table %>% group_by(Month) %>% summarize(av_temp = mean(Temp) 

5) convert the sable back to a ""ts"" object once the file is identified as having no gaps in the time series. 

6) Finally, use ggseasonalplot() to plot the seasonal data by month. ",2021,2020
Excel,,,,,I am very uncomfortable using this tool,"clean data, 
list, sum and average data in monthly bins. 
Plot and chart data",2021,2020
Excel,,,,,I am comfortable using this tool,Temperature would be need to be converted to C. Then could utilize Excel to plot the AVERAGE (insert data location) which could be plotted using a line chart.,2021,2020
Excel,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,export it as a readable file for Rstudio then manipulate the data in R for whatever analysis is needed.,2021,2020
Excel,,,,,I am very comfortable using this tool,"1) Organize all data by year, month and day into seamless comlumns. T
2) Use the sort tool to sort by month column
3) Set up an average equation for Januarary months
4) copy and paste equation 12 times
5) move results to a new spreadsheet and use scatter plot tool to plot data",2021,2020
Excel,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"(1) Make sure all the text files are in the same folder
(2) Make sure the names of the files have a pattern or at least end in .txt
(3) Open R Studio and check that I have all the packages I need
(4) Set the path in R to include the location of the files
(5) Import and create a list of text files in R
(6) Combine the files in r and create a data frame to start data manipulation
(7) Check there is a data frame with 2 columns including date and temperature
(8) Check the format of the 2 columns making sure both formats are appropriate
(9) I would create a new df that applies an aggregate function to the original data frame so it calculates the average for every month
(10)  Download package such as ggplot2
(11) Browse the right visual required and start coding the functions to generate the time series plot and customize the color, axis, and title.
(12) Filter the data to create a plot for a single year only
(13) Once the visual makes sense, create a loop so it generated and outputs the same plot for every year 32 times.
(14) Make sure the resulted plots are exported, sized, saved, and named properly so there are 32 different plots. 

",2021,2020
,"Scientific Programming (e.g. R, Python)",,,,I am uncomfortable using this tool,"I am in between uncomfortable and comfortable with this. I feel like I could figure this out if I gave it a lot of thought, but right now I just have a general idea....

1. Import python packages
2. Read in the files
3. Create some sort of loop code to convert F to C
4. Create some sort of loop code to obtain the monthly temp averages
5. Create a table that includes the monthly temp averages
6. Use Matplotlib to plot the data from the table",2021,2020
Excel,,,,,I am very comfortable using this tool,"1. Delineate all files into Excel and then copy their worksheets to a fresh new workbook.
3. Confirm all worksheets have the same format. If not adjust.
4. Create a new worksheet that contains a table with column  A as year, Column B as month, Column C as mean temp, Column E as month, Column F as overall mean temp
5. Column C equation would be (starting at cell C2 then duplicated down):
        =Averageif(sheetforyear$A2!$A:$A,$B2,sheetforyear$A2!$B:$B)
6. Column F equation would be (starting at cell F2 then duplicated down):
        =(Averageif($B:$B,$E2,$C:$C)-32)/1.8
7. Columns E and F would then be used to create the graph",2021,2020
Excel,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"Using Python would be a bit more difficult but would likely involve importing and displaying yearly data and converting values to Fahrenheit probably after calculating yearly averages.  Depending on intentions for the final plot(s), one would most likely create a scatter plot of all yearly averaged values in Fahrenheit for the 32 year time period.  Excel would involve working with a spreadsheet and converting values with a specific formula for the averaged yearly values.  These calculations would then be assigned to a scatter plot for the 32 year time period.",2021,2020
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"1) Create a list of files python
2) Iterate through the list

Each iteration:
A) Parses the",2021,2020
Excel,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,Using python I would do a time series and that‚Äôs what I can remember at the moment,2022,2021
Excel,"Scientific Programming (e.g. R, Python)",,,,I am very uncomfortable using this tool,Python: create dataframe variable = pd_read.csv() > create a list variable for the months r > numpy function for calculating average mean of monthly values for each months > create a list variable for all 32 calculated means > use matplotlib.pyplot function to plot the list of 32 means,2022,2021
Excel,,,,,I am comfortable using this tool,"Import the text file and create 32 rows, then parse for each month, then use a formula to calculate the average.",2022,2021
Excel,,,,,I am comfortable using this tool,I would import the data into excel and use excel formula to calculate the monthly averages.,2022,2021
Excel,,,,,I am comfortable using this tool,"1. import data into excel
2.put 32 year data in column
3 take monthly average
4. plot
it will be complex",2022,2021
Excel,,,,,I am very comfortable using this tool,"Currently this process would be painful and inefficient for me, as I have no experience with programming. It would involve copying data from each text file over to an excel spreadsheet, spending silly amounts of time formatting the data, calculating average monthly values, and then plotting the data. I'm hoping to learn the tools I need in this course to make this process much faster, more accurate/foolproof, and more efficient!",2022,2021
Excel,,,,,I am very comfortable using this tool,"1. Manually copy each text file into Excel tab(s)
2. Text to columns using delimited or manual spacing to separate data
3. Properly label and sort data table
4. Plot using Chart function, add final labels, colors, styles, etc. ",2022,2021
Excel,,,,,I am comfortable using this tool,Write a function in excel to average the values,2022,2021
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"Name files, place in folder, link Python to read files, plot averaging months.",2022,2021
Excel,,,,,I am comfortable using this tool,"Search and possibly adapt an already avail vba code that would allow me to import muliple text data files into excel as one batch, (or as an option, could import all 32 files one by one)
Use excel formula to covert C to F
Use excel formula to calculate averages
Use Excel graphs to generate final plot",2022,2021
,"Scientific Programming (e.g. R, Python)",,,,I am very uncomfortable using this tool,not entirely sure,2022,2021
Excel,,,Other (please list),Igor,I am very comfortable using this tool,Open each text file. Clean the data. Create a function to convert the temperature from Fahrenheit to Celsius. Create a function to sort data by month. Create a function to calculate the monthly average temperature. Plot the temperature over time.,2022,2021
,"Scientific Programming (e.g. R, Python)",,,,I am comfortable using this tool,"Create a jupyter notebook instance.
Load files into local memory
Parse into an object
Calculate yearly average
Create plot using matplotlib",2022,2021
,"Scientific Programming (e.g. R, Python)",,Other (please list),IDL,I am comfortable using this tool,"Find the data and create a list of them, Read through each data file in a loop and loop again through the months and append each month's worth of data to a 2D array (month, count). Outside that loop start another loop and take the average per accumulated data by month and assign that to another array to plot. ",2022,2021
Excel,"Scientific Programming (e.g. R, Python)",,,,I am uncomfortable using this tool,"Excel
Copy paste contents of each text file into a spreadsheet, splitting cells as needed. Generate functions to compute the conversion and mean by year. Generate plot using the newly computed values.

Python
Loop through the text files to incorporate each into a data frame. Feature engineer to compute conversion and mean. Use matplotlib or similar library to plot a chart.",2022,2021
Excel,,,,,I am comfortable using this tool,"import data into excel, summarize using in-app tools (in excel), and then plot.",2022,2021
Excel,,,,,I am very comfortable using this tool,"Import the file into excel,
Rearrange them into daily  temperature for the  365 days in the year
Calculate average daily temperatures for the 32 years based on the day in a year
Calculate the monthly temperatures
Plot these average temperatures ",2022,2021
,"Scientific Programming (e.g. R, Python)",,,,I am very comfortable using this tool,"Using lists in python, I would find the average of the data and plot it using matplotlib. ",2022,2021
Excel,,,,,I am very comfortable using this tool,import the text file data into Excel and create a pivot chart to view the monthly average temperature.(grouping days into months).,2022,2021
Excel,,,,,I am comfortable using this tool,"I would aggregate all the text files into excel, average each month, and then use the graphing features",2022,2021
Excel,,,,,I am comfortable using this tool,I'd copy and paste into an excel and then make a chart.,2022,2021
Excel,,,,,I am comfortable using this tool,"I would likely import the text file into Excel, or open the text file and copy and paste the data into excel. I would make 32 different columns, one for each year of data/text file. Then I would use the Excel ""average"" function to find the mean of each year, and would make a table with each mean and the corresponding year. I would then convert this table into a graph.",2023,2022
Scientific programming (e.g. R & Python),,,,,I am comfortable using this tool,"Do we want all years on one plot? 

If so, I would probably concatenate the dfs into a single df object, then group by the date object and aggregate on temp ( df.groupby(""month"").agg({temp:'mean'}) )

Otherwise, I'd loop through the dfs and perform group-by's on each and plot.

I'm unfamiliar with how you could add your x-axis into the plot and have negative values below.",2023,2022
Excel,,,,,I am comfortable using this tool,.,2023,2022
Excel,Scientific programming (e.g. R & Python),,,,I am comfortable using this tool,I would create a function to sum and average the monthly data for each year than plot a line of different colors for each year with markers on the monthly average.,2023,2022
Excel,,,,,I am very comfortable using this tool,"First, I would import the test files into Excel sheets. I'm assuming the files are either CSV, or tab-delimited, and should be able to import. I could then separate out the monthly records and calculate averages for each of the months. Collect all of the averages and plot the data into the chart. I'm sure there are more efficient tools for doing this, but that's how I would be most comfortable manipulating the data.

To do something that would be a little more interesting and different, I would like to take the daily data and plot it into a raster time series graph - where days of the year are the columns, and the years are the rows, with the temperature as the cell value. That would allow a visual assessment of temperature patterns over the time period. I would use Surfer or Excel to create the raster time series.",2023,2022
Excel,,,,,I am very comfortable using this tool,"convert .txt files to excel spreadsheet, create line graph ",2023,2022
Excel,,,,,I am comfortable using this tool,"Using Excel and making a similar chart like the one above, I would first use excel to create a line chart for each year of data.  Now that I have a data point that defines the average for that specific year.  I now have a smaller data set (12 data points per year = 384).  Depending on the customer and the intended result there are 4 different ways to display the data: 1. Line chart with 32 different colored lines (will look very crowded). 2. Video of the line chart moving through the years. 3. Averaging all the data points per month giving a overall average total in a line chart. 4. Showing the first year average, 16 years (halfway, or a every 5 year data point), and the 32nd year average to show potential changes over time.",2023,2022
Scientific programming (e.g. R & Python),,,,,I am comfortable using this tool,"- compile data files in a single directory
- in python: iterate through the files, import them, and compile them into a pandas dataframe 
- convert F to C
- calculate monthly averages and store in a numpy array (shape = years, months)
- plot results in matplotlib",2023,2022
Scientific programming (e.g. R & Python),Other (please list),,,,I am comfortable using this tool,"# Figuring out the most efficient way to do this is the trick.  Maybe I'd start by creating # a single file with all the data.  Could do that via a command line or in perl.
# My instructions are for making the plot shown as an example.  The written
# instructions sound to me that they are asking for something different.

foreach of our 32 filenames
   open and read.
   print each line to a file handle for the new big file.

close the file handle.

# Now we have a new file with all the data to work with so we  read it to an array and # loop through the array looking for all the records for each of our 12 months.

Open the big file.
Read the file to an array.

Loop through each month via a foreach or for loop.

use the split function to extract the month from the date record.

if {
   the month in the record equals the month that our loop is on then
   extract the temperature value and begin a cumulative sum i.e. 
   temp_sum = temp_sum + temperature
   increment a counter i.e. day++;
}
  month_average_temperature = temp_sum/day;
  print the month counter and the average temperature to a file or store in an array.

  reset the temp_sum and day variables back to zero.

  now the for loop will go to the next month and search the array again.

# To make the plot ... I have done a lot of printing of xml files to display data in SVG. 
#  Or, plot in a software.  Or plot using a perl module.
",2023,2022
Excel,Scientific programming (e.g. R & Python),,,,I am comfortable using this tool,"I think I could use either Excel or Python (through Google Colab) to calculate the monthly average temperature. Then, I could use Python and its associated software packages to read in the text files and plot the data.",2023,2022
Excel,,,,,I am comfortable using this tool,"Import all the files into Excel
If it is a one-time deal I would copy/past the data from the 32 files into one workbook. If it is something I would do again/recurring, I would write a macro to scrape the data from all the files in x folder.
I would pull all the data onto one worksheet as the averages per date
Create a chart based on that data

In python/Jupyter, I would read all the csv files into a pandas dataframe (don't know how but I could figure that out)
Then use matplotlib to display the averages in a plot",2023,2022
Scientific programming (e.g. R & Python),,,,,I am uncomfortable using this tool,"I would first merge all 25 text files, which I would need to look up on google how to do. Potentially do this in the terminal and then import the merged file into python. Then I would take the mean of the file with the time= month dimension, and finally plot the results using matplotlib. ",2023,2022
Scientific programming (e.g. R & Python),,,,,I am uncomfortable using this tool,"step one- clean and join data files (i.e. make sure file formats and headers are consistent, gap fill any missing time stamps) 
step two -visualize joined files (plot in R or matlab) and identify any 'bad' data, flag bad data as needed via filter in R or matlab (i.e. x> 30c = bad)
step three - drop bad data, infill missing data if able (i.e. from relationship to a secondary data set if one exists)
step four- calculate average monthly temp from the infilled daily data set and plot (in R or matlab)",2023,2022
Excel,Scientific programming (e.g. R & Python),,,,I am comfortable using this tool,"First I would open each file in Excel (or Google Sheets) to take a look at the data in that format and check to see that it is all formatted correctly, notice any missing values, and clean it up. Then I would export the data in a .csv file to open in Google Colab. I'd write Python code to calculate the monthly average temperature and save it as a dataframe. Then I'd use matplotlib to graph the data in Google Colab. If I ran into trouble with the Python coding, since it's relatively new to me, I'd go back to Google Sheets and confidently complete the calculations and graphs using Google Sheets instead of Python in Google Colab.",2023,2022
Scientific programming (e.g. R & Python),,,,,I am comfortable using this tool,"1. Combine all files into one time series with Pandas and Python 
2. Transform temperatures into Celsius using Python script
3. Calculate the monthly average temperatures for each year and then create a plot ",2023,2022
Scientific programming (e.g. R & Python),,,,,I am very comfortable using this tool,"download the files into a project folder, open a new project in RStudio, library tidyverse, dplyr, and ggplot, use rbind, lapply, list.files, and read.csv to merge the dataset. Manipulate date data into year-date using dplyr depending on format. create a new dataframe with month and average using groupby and lapply, then ggplot line month and temp.",2023,2022
Excel,Scientific programming (e.g. R & Python),,,,I am comfortable using this tool,I would create a list for every text file and try to compile them into one dataframe. From there I would attempt to take the average from each column.,2023,2022
Scientific programming (e.g. R & Python),,,,,I am very uncomfortable using this tool,N/A,2023,2022
Scientific programming (e.g. R & Python),,,,,I am comfortable using this tool,"1. Save files in machine readable format to a common folder
2. Create loop to import each file and save contents to a dataframe
3. Merge all dataframes
4. Perform any needed data aggregations
5. Graph aggregated data with Matplotlib",2023,2022
Scientific programming (e.g. R & Python),,,,,I am very comfortable using this tool,"1. Review the data, data source, units, and other metadata to understand the data, its provenance, and any data quality issues.
2. Create a project directory and save all data files (without modification) in a single place, unless they are easily accessible from the web, and then maybe still.
3. Create an environment for the project (although I might skip it here if this was the only task).
4. Open a Jupyter Notebook.
5. Import libraries: pandas, matplotlib
6. Write a function to read and collate the data from each file.
7. Create some basic plots to explore the data, look for null values, outliers, etc.
8. Use the matplotlib library to create the required visual.
9. Save the plot out as a jpeg.",2023,2022
Scientific programming (e.g. R & Python),,,,,I am comfortable using this tool,"1. Organize files to pull data quickly and efficiently
2. Create a function to find average of each month and put into list
3. Plot averages with matplot",2023,2022
Excel,,,,,I am comfortable using this tool,"1. Open each file into an excel book
2. run an =AVERAGE(X1:X12) formula to get all the figures i need
3. google the instructions for a quick line graph because i forgot how to do it",2023,2022